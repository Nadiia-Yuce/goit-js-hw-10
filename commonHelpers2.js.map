{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('input[type=\"number\"]'); //value (delay) - к-ть мілісекунд\nconst form = document.querySelector('.form');\nconst inputFulfilled = document.querySelector('input[value=\"fulfilled\"]'); //value: \"fulfilled\"; checked: true/false (д. радіокнопки)\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n  const delay = Number(input.value); //Number(evt.target.elements.delay.value); через атрибут [name='delay'] в input\n  //const stateValue = evt.target.elements.state.value //fulfilled || rejected -> на основі можна зробити перевірку\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (inputFulfilled.checked) {\n        resolve(`✅ Fulfilled promise in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(value =>\n      iziToast.success({\n        message: value,\n        position: 'topRight',\n      })\n    )\n\n    .catch(error =>\n      iziToast.error({\n        message: error,\n        position: 'topRight',\n      })\n    );\n  form.reset();\n});\n"],"names":["input","form","inputFulfilled","evt","delay","resolve","reject","value","iziToast","error"],"mappings":"wIAGA,MAAMA,EAAQ,SAAS,cAAc,sBAAsB,EACrDC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAiB,SAAS,cAAc,0BAA0B,EAExED,EAAK,iBAAiB,SAAUE,GAAO,CACrCA,EAAI,eAAc,EAClB,MAAMC,EAAQ,OAAOJ,EAAM,KAAK,EAGhB,IAAI,QAAQ,CAACK,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXJ,EAAe,QACjBG,EAAQ,0BAA0BD,CAAK,IAAI,EAE3CE,EAAO,yBAAyBF,CAAK,IAAI,CAE5C,EAAEA,CAAK,CACZ,CAAG,EAGE,KAAKG,GACJC,EAAS,QAAQ,CACf,QAASD,EACT,SAAU,UAClB,CAAO,CACF,EAEA,MAAME,GACLD,EAAS,MAAM,CACb,QAASC,EACT,SAAU,UAClB,CAAO,CACP,EACER,EAAK,MAAK,CACZ,CAAC"}